
import numpy as np
from sklearn.cluster import DBSCAN
from sklearn import metrics
from sklearn.preprocessing import StandardScaler

# Generate sample data
from sklearn.datasets import load_iris
iris = load_iris()
print(iris.data)
df=iris.data

#Normalize Data
X = StandardScaler().fit_transform(df)
print(X)
X.shape

#Create Instance of DBSCAN, Set Parameters, Fit Data
from sklearn.cluster import DBSCAN
db=DBSCAN(eps=0.5, min_samples=5)
dg=db.fit(df)
print(dg)
db.labels_
db.labels_.shape

#Data Visualization
import matplotlib.pyplot as pl
from sklearn.decomposition import PCA
pca = PCA(n_components=2).fit(iris.data)
pca_2d = pca.transform(iris.data)
for i in range(0, pca_2d.shape[0]):
 if db.labels_[i] == 0:
  c1 = pl.scatter(pca_2d[i,0],pca_2d[i,1],c='r',
 marker='+')
 elif db.labels_[i] == 1:
  c2 = pl.scatter(pca_2d[i,0],pca_2d[i,1],c='g',
 marker='o')
 elif db.labels_[i] == -1:
  c3 = pl.scatter(pca_2d[i,0],pca_2d[i,1],c='b',
 marker='*')
pl.legend([c1, c2, c3], ['Cluster 1', 'Cluster 2','Noise'])
pl.title('DBSCAN finds 2 clusters and anomalies')
pl.show()
